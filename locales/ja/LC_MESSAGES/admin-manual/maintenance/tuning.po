# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Artefactual Systems Inc
# This file is distributed under the same license as the AtoM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AtoM 2.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-09 21:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: ja <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.14.0\n"

#: ../../admin-manual/maintenance/tuning.rst:5
msgid "Tuning server parameters"
msgstr "サーバーパラメータの調整"

#: ../../admin-manual/maintenance/tuning.rst:7
msgid ""
"If you are looking for methods to improve the performance of AtoM and your "
"deployment, you are now in the right place!"
msgstr "AtoMおよびデプロイメントのパフォーマンスを向上させる方法を探している場合、今が正しい場所に来ています！"

#: ../../admin-manual/maintenance/tuning.rst:10
msgid ""
"First of all, most common performance issues could be solved by redesigning "
"the code, and that's something that we are working on constantly. But "
"there's no doubt that some configuration tweaks in your servers can give you"
" better results."
msgstr ""
"まず第一に、最も一般的なパフォーマンスの問題はコードの再設計によって解決することができます。そして、それは私たちが常に取り組んでいることです。しかし、サーバーの設定を調整することで、より良い結果を得られることは間違いありません。"

#: ../../admin-manual/maintenance/tuning.rst:15
msgid "This page describes the most common performance tweaks used in AtoM."
msgstr "このページでは、AtoMで最も一般的に使用されるパフォーマンスの調整について説明します。"

#: ../../admin-manual/maintenance/tuning.rst:19
msgid "PHP opcode cache"
msgstr "PHPオペコードキャッシュ"

#: ../../admin-manual/maintenance/tuning.rst:21
msgid ""
"PHP is an interpreted language. Each time a client requests a PHP page, the "
"server will read the source code and compile it before it's executed. `APC "
"<http://php.net/manual/en/book.apc.php>`__ is one of the solutions available"
" that caches the compiled output of each PHP script in order to save CPU "
"cycles in subsequent requests."
msgstr ""
"PHPはインタープリタ言語です。クライアントがPHPページをリクエストするたびに、サーバーはソースコードを読み取り、実行される前にそれをコンパイルします。`APC"
" <http://php.net/manual/en/book.apc.php>`__ "
"は利用可能なソリューションの1つであり、PHPスクリプトのコンパイル済み出力をキャッシュすることで、後続のリクエストにおけるCPUサイクルを節約することができます。"

#: ../../admin-manual/maintenance/tuning.rst:27
msgid "Deploying APC is really easy:"
msgstr "APCを展開することは本当に簡単です："

#: ../../admin-manual/maintenance/tuning.rst:33
msgid ""
"We consider this component so important that it's listed as a mandatory "
"extension under :ref:`installation-requirements`. Really, don't ignore this:"
" we consider compiling the same source code again and again in a per-request"
" basis to be a huge waste of time and computing resources."
msgstr ""
"このコンポーネントは非常に重要であると考えており、`:ref:`installation-"
"requirements`の下で必須の拡張機能としてリストされています。本当に無視しないでください：同じソースコードをリクエストごとに何度もコンパイルすることは、時間と計算リソースの莫大な無駄だと私たちは考えています。"

#: ../../admin-manual/maintenance/tuning.rst:40
msgid ""
"In addition, there is one particular directive in APC that you should tweak "
"to get the best performance: ``apc.stat``, enabled by default, is a "
"directive that forces APC to check the PHP scripts on each request to "
"determine if they have been modified. Modifying PHP scripts may happen "
"frequently in development environments, but in production you don't really "
"need this. When you are upgrading AtoM, just restart the PHP pool and the "
"APC cache will be flushed."
msgstr ""
"また、APCには、最適なパフォーマンスを得るために調整すべき特定のディレクティブがあります。デフォルトで有効になっている``apc.stat``は、PHPスクリプトが変更されたかどうかを決定するために、各リクエストでPHPスクリプトをチェックするようAPCに強制するディレクティブです。開発環境ではPHPスクリプトを頻繁に変更することがありますが、本番環境では実際にはこれが必要ではありません。AtoMをアップグレードするときは、PHPプールを再起動するだけで、APCキャッシュはフラッシュされます。"

#: ../../admin-manual/maintenance/tuning.rst:49
msgid ""
"APC has not been ported to PHP 5.5. Instead, Zend has contributed their "
"`Zend Optimizer+ opcode cache (OPcache) "
"<http://php.net/manual/en/book.opcache.php>`__. However, user-data cache is "
"not something that OPcache implements, so if you are planning to use PHP 5.5"
" please look at APCu as a valid replacement for user-land caching, which "
"emulates its functionality while providing the same API."
msgstr ""
"APCはPHP 5.5に移植されていません。代わりにZendが、彼らの`Zend Optimizer+ オペコードキャッシュ(OPcache) "
"<http://php.net/manual/ja/book.opcache.php>`を提供しています。しかし、OPcacheはユーザーデータキャッシュを実装していませんので、もしあなたがPHP"
" "
"5.5を使用する予定であれば、APCuをユーザーランドキャッシュの有効な代替として検討してください。APCuはその機能をエミュレートしつつ、同じAPIを提供しています。"

#: ../../admin-manual/maintenance/tuning.rst:58
msgid "Other components that can be tweaked"
msgstr "他に調整可能なコンポーネント"

#: ../../admin-manual/maintenance/tuning.rst:60
msgid ""
"This document is work in progress. We are planning to describe more tweaking"
" options in at least the following components:"
msgstr "このドキュメントは進行中の作業です。少なくとも以下のコンポーネントにおいて、より多くの調整オプションを記述する予定です。"

#: ../../admin-manual/maintenance/tuning.rst:63
msgid "MySQL"
msgstr "MySQL"

#: ../../admin-manual/maintenance/tuning.rst:64
msgid "Nginx"
msgstr "Nginx (エンジンエックス)"

#: ../../admin-manual/maintenance/tuning.rst:65
msgid "PHP-FPM"
msgstr ""
"PHP-FPMとは「PHP FastCGI Process "
"Manager」の略称で、WebサーバーとPHP間の高速な通信を可能にし、高パフォーマンスかつ高負荷のWebアプリケーションに適した方式を提供します。FPMはFastCGIの改良版として機能し、ウェブサーバーとPHPを繋げる役割を果たすことで、特に動的コンテンツを多く取り扱うサイトの処理能力を向上させることができます。また、プロセス管理機能を持っており、アクティブなプロセス数の制御、アイドルプロセスの管理、プロセスのクラッシュ回復など、サーバーのリソースを有効に利用し、安定した運用をサポートする役割を持っています。"

#: ../../admin-manual/maintenance/tuning.rst:66
msgid "Linux"
msgstr ""
"Linuxはそのままで、日本語に翻訳する必要はありません。それはオペレーティングシステムの名前であり、特定の言語に翻訳されることではありません。"

#: ../../admin-manual/maintenance/tuning.rst:67
msgid "Caching proxy servers (HTTP accelerators)"
msgstr "キャッシュプロキシサーバー（HTTPアクセラレータ）"

#: ../../admin-manual/maintenance/tuning.rst:68
msgid "etc..."
msgstr ""
"あなたのメッセージが「etc...」で終わっているため、翻訳する具体的なテキストが提供されていません。翻訳が必要なテキストを提供していただければ、喜んで日本語に翻訳いたします。"
